{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hii\\\\Desktop\\\\Manager\\\\manager\\\\src\\\\components\\\\Page3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page3 = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [list, setList] = useState([]);\n  const [iteration, setIteration] = useState(0);\n  useEffect(() => {\n    // Gọi API ở đây và cập nhật state \"data\"\n    // Ví dụ:\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://localhost:7050/api/Member');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const result = await response.json();\n        setData(result);\n        const delay = 500; // milliseconds\n        const delayedList = data.map((item, index) => ({\n          ...item,\n          delay: index * delay // Tính toán độ trễ cho mỗi phần tử\n        }));\n        setList([...delayedList, {\n          isIterationMarker: true\n        }]); // Dùng một đánh dấu để đánh dấu lượt lặp\n\n        // Tăng số lần lặp lại sau mỗi lần hiển thị danh sách\n        setIteration(prevIteration => prevIteration + 1);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    fetchData();\n  }, [iteration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This is Page 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID from URL: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Page3, \"r5xmv/PdMUbpvRxyiQhoiveYeps=\", false, function () {\n  return [useParams];\n});\n_c = Page3;\nexport default Page3;\nvar _c;\n$RefreshReg$(_c, \"Page3\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Page3","_s","data","setData","id","list","setList","iteration","setIteration","fetchData","response","fetch","ok","Error","result","json","delay","delayedList","map","item","index","isIterationMarker","prevIteration","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hii/Desktop/Manager/manager/src/components/Page3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Page3 = () => {\r\n    const [data, setData] = useState([]);\r\n    const { id } = useParams();\r\n    const [list, setList] = useState([]);\r\n    const [iteration, setIteration] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Gọi API ở đây và cập nhật state \"data\"\r\n        // Ví dụ:\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('https://localhost:7050/api/Member');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                const result = await response.json();\r\n                setData(result);\r\n\r\n                const delay = 500; // milliseconds\r\n                const delayedList = data.map((item, index) => ({\r\n                    ...item,\r\n                    delay: index * delay, // Tính toán độ trễ cho mỗi phần tử\r\n                }));\r\n                setList([...delayedList, { isIterationMarker: true }]); // Dùng một đánh dấu để đánh dấu lượt lặp\r\n\r\n                // Tăng số lần lặp lại sau mỗi lần hiển thị danh sách\r\n                setIteration((prevIteration) => prevIteration + 1);\r\n\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error.message);\r\n            }\r\n\r\n\r\n        }\r\n        fetchData();\r\n    }, [iteration]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>This is Page 3</h2>\r\n            <p>ID from URL: {id}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Page3;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAES;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCZ,OAAO,CAACW,MAAM,CAAC;QAEf,MAAME,KAAK,GAAG,GAAG,CAAC,CAAC;QACnB,MAAMC,WAAW,GAAGf,IAAI,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;UAC3C,GAAGD,IAAI;UACPH,KAAK,EAAEI,KAAK,GAAGJ,KAAK,CAAE;QAC1B,CAAC,CAAC,CAAC;QACHV,OAAO,CAAC,CAAC,GAAGW,WAAW,EAAE;UAAEI,iBAAiB,EAAE;QAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;QAExD;QACAb,YAAY,CAAEc,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;MAGtD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxD;IAGJ,CAAC;IACDhB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAIf,oBACIR,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA;MAAA2B,QAAA,GAAG,eAAa,EAACtB,EAAE;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA9CID,KAAK;EAAA,QAEQH,SAAS;AAAA;AAAAkC,EAAA,GAFtB/B,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}