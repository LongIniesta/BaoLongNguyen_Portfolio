{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hii\\\\Desktop\\\\Manager\\\\manager\\\\src\\\\components\\\\Page3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page3 = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [currentIdIndex, setCurrentIdIndex] = useState(0);\n  const [list, setList] = useState([]);\n  const [concatenatedString, setConcatenatedString] = useState('');\n  const [availableIndexes, setAvailableIndexes] = useState([]); // Mảng lưu trữ các index có sẵn\n  const [currentAvailableIndex, setCurrentAvailableIndex] = useState(0);\n  const [loaded, setLoaded] = useState(false); // Biến đánh dấu đã tải dữ liệu hay chưa\n  const [prizeData, setPrizeData] = useState(null);\n  useEffect(() => {\n    const fetchPrizeData = async () => {\n      try {\n        const response = await fetch('https://localhost:7050/api/Prize/' + id); // Thay đổi URL của API theo đúng đường dẫn của bạn\n        if (!response.ok) {\n          throw new Error('Failed to fetch prize data');\n        }\n        const prize = await response.json();\n        setPrizeData(prize);\n      } catch (error) {\n        console.error('Error fetching prize data:', error.message);\n      }\n    };\n    fetchPrizeData();\n  }, []);\n  useEffect(() => {\n    // Chỉ tải dữ liệu nếu loaded là false\n    if (!loaded) {\n      const fetchData = async () => {\n        try {\n          const response = await fetch('https://localhost:7050/api/Member');\n          if (!response.ok) {\n            throw new Error('Failed to fetch data');\n          }\n          const result = await response.json();\n          setData(result);\n          setAvailableIndexes(Array.from({\n            length: result.length\n          }, (_, index) => index));\n          setLoaded(true); // Đặt loaded thành true sau khi tải dữ liệu\n        } catch (error) {\n          console.error('Error fetching data:', error.message);\n        }\n      };\n      fetchData();\n    }\n  }, [loaded]);\n  useEffect(() => {\n    // Tạo interval để chuyển đổi id mỗi giây\n    const intervalId = setInterval(() => {\n      if (availableIndexes.length > 0) {\n        const randomIndex = Math.floor(Math.random() * availableIndexes.length);\n        setCurrentIdIndex(availableIndexes[randomIndex]);\n        setCurrentAvailableIndex(randomIndex);\n      } else {\n        setAvailableIndexes(Array.from({\n          length: data.length\n        }, (_, index) => index));\n      }\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, [availableIndexes]);\n  if (!prizeData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n  const handleConcatenate = () => {\n    if (list.length < prizeData.quantity) {\n      setList(prevList => [data[currentIdIndex], ...prevList]);\n\n      // Tạo một bản sao mới của mảng availableIndexes và loại bỏ phần tử tương ứng\n      setAvailableIndexes(prevIndexes => {\n        const newIndexes = [...prevIndexes];\n        newIndexes.splice(currentAvailableIndex, 1);\n        return newIndexes;\n      });\n    } else {\n      toast(\"Đã đủ giải thưởng\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.length > 0 && data[currentIdIndex].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: prizeData.prizeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConcatenate,\n      children: \"Concatenate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.memberName, \" - \", item.phoneNumber, \" \"]\n      }, index.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Page3, \"adm444AwOhAl9bsUD86awofTS0s=\", false, function () {\n  return [useParams];\n});\n_c = Page3;\nexport default Page3;\nvar _c;\n$RefreshReg$(_c, \"Page3\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ToastContainer","toast","jsxDEV","_jsxDEV","Page3","_s","data","setData","id","currentIdIndex","setCurrentIdIndex","list","setList","concatenatedString","setConcatenatedString","availableIndexes","setAvailableIndexes","currentAvailableIndex","setCurrentAvailableIndex","loaded","setLoaded","prizeData","setPrizeData","fetchPrizeData","response","fetch","ok","Error","prize","json","error","console","message","fetchData","result","Array","from","length","_","index","intervalId","setInterval","randomIndex","Math","floor","random","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","handleConcatenate","quantity","prevList","prevIndexes","newIndexes","splice","prizeName","onClick","map","item","memberName","phoneNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hii/Desktop/Manager/manager/src/components/Page3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Page3 = () => {\r\n    const [data, setData] = useState([]);\r\n    const { id } = useParams();\r\n    const [currentIdIndex, setCurrentIdIndex] = useState(0);\r\n    const [list, setList] = useState([]);\r\n    const [concatenatedString, setConcatenatedString] = useState('');\r\n    const [availableIndexes, setAvailableIndexes] = useState([]); // Mảng lưu trữ các index có sẵn\r\n    const [currentAvailableIndex, setCurrentAvailableIndex] = useState(0);\r\n    const [loaded, setLoaded] = useState(false); // Biến đánh dấu đã tải dữ liệu hay chưa\r\n    const [prizeData, setPrizeData] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPrizeData = async () => {\r\n            try {\r\n                const response = await fetch('https://localhost:7050/api/Prize/' + id); // Thay đổi URL của API theo đúng đường dẫn của bạn\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch prize data');\r\n                }\r\n\r\n                const prize = await response.json();\r\n                setPrizeData(prize);\r\n            } catch (error) {\r\n                console.error('Error fetching prize data:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchPrizeData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Chỉ tải dữ liệu nếu loaded là false\r\n        if (!loaded) {\r\n            const fetchData = async () => {\r\n                try {\r\n                    const response = await fetch('https://localhost:7050/api/Member');\r\n                    if (!response.ok) {\r\n                        throw new Error('Failed to fetch data');\r\n                    }\r\n                    const result = await response.json();\r\n                    setData(result);\r\n                    setAvailableIndexes(Array.from({ length: result.length }, (_, index) => index));\r\n                    setLoaded(true); // Đặt loaded thành true sau khi tải dữ liệu\r\n\r\n                } catch (error) {\r\n                    console.error('Error fetching data:', error.message);\r\n                }\r\n            }\r\n\r\n            fetchData();\r\n        }\r\n    }, [loaded]);\r\n\r\n    useEffect(() => {\r\n        // Tạo interval để chuyển đổi id mỗi giây\r\n        const intervalId = setInterval(() => {\r\n            if (availableIndexes.length > 0) {\r\n                const randomIndex = Math.floor(Math.random() * availableIndexes.length);\r\n                setCurrentIdIndex(availableIndexes[randomIndex]);\r\n                setCurrentAvailableIndex(randomIndex);\r\n            } else {\r\n                setAvailableIndexes(Array.from({ length: data.length }, (_, index) => index));\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [availableIndexes]);\r\n    if (!prizeData) {\r\n        return <p>Loading...</p>;\r\n    }\r\n    const handleConcatenate = () => {\r\n\r\n        if (list.length < prizeData.quantity) {\r\n            setList(prevList => [data[currentIdIndex], ...prevList]);\r\n\r\n            // Tạo một bản sao mới của mảng availableIndexes và loại bỏ phần tử tương ứng\r\n            setAvailableIndexes(prevIndexes => {\r\n                const newIndexes = [...prevIndexes];\r\n                newIndexes.splice(currentAvailableIndex, 1);\r\n                return newIndexes;\r\n            });\r\n        } else {\r\n            toast(\"Đã đủ giải thưởng\");\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <p>{data.length > 0 && data[currentIdIndex].id}</p>\r\n            <h1>{prizeData.prizeName}</h1>\r\n            <button onClick={handleConcatenate}>Concatenate</button>\r\n            <ul>\r\n                {list.map((item, index) => (\r\n                    <li key={index.id}>{item.memberName} - {item.phoneNumber} </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Page3;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEW;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACoB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACrE,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAGhDC,SAAS,CAAC,MAAM;IACZ,MAAMyB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,GAAGjB,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI,CAACgB,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QACjD;QAEA,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACnCP,YAAY,CAACM,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC9D;IACJ,CAAC;IAEDT,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAACqB,MAAM,EAAE;MACT,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC1B,IAAI;UACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;UACjE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;UAC3C;UACA,MAAMO,MAAM,GAAG,MAAMV,QAAQ,CAACK,IAAI,CAAC,CAAC;UACpCtB,OAAO,CAAC2B,MAAM,CAAC;UACflB,mBAAmB,CAACmB,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAEH,MAAM,CAACG;UAAO,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAAC,CAAC;UAC/EnB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAErB,CAAC,CAAC,OAAOU,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;QACxD;MACJ,CAAC;MAEDC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZrB,SAAS,CAAC,MAAM;IACZ;IACA,MAAM0C,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAI1B,gBAAgB,CAACsB,MAAM,GAAG,CAAC,EAAE;QAC7B,MAAMK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG9B,gBAAgB,CAACsB,MAAM,CAAC;QACvE3B,iBAAiB,CAACK,gBAAgB,CAAC2B,WAAW,CAAC,CAAC;QAChDxB,wBAAwB,CAACwB,WAAW,CAAC;MACzC,CAAC,MAAM;QACH1B,mBAAmB,CAACmB,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE/B,IAAI,CAAC+B;QAAO,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAAC,CAAC;MACjF;IACJ,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMO,aAAa,CAACN,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACzB,gBAAgB,CAAC,CAAC;EACtB,IAAI,CAACM,SAAS,EAAE;IACZ,oBAAOlB,OAAA;MAAA4C,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAE5B,IAAIzC,IAAI,CAAC0B,MAAM,GAAGhB,SAAS,CAACgC,QAAQ,EAAE;MAClCzC,OAAO,CAAC0C,QAAQ,IAAI,CAAChD,IAAI,CAACG,cAAc,CAAC,EAAE,GAAG6C,QAAQ,CAAC,CAAC;;MAExD;MACAtC,mBAAmB,CAACuC,WAAW,IAAI;QAC/B,MAAMC,UAAU,GAAG,CAAC,GAAGD,WAAW,CAAC;QACnCC,UAAU,CAACC,MAAM,CAACxC,qBAAqB,EAAE,CAAC,CAAC;QAC3C,OAAOuC,UAAU;MACrB,CAAC,CAAC;IACN,CAAC,MAAM;MACHvD,KAAK,CAAC,mBAAmB,CAAC;IAC9B;EAGJ,CAAC;EAED,oBACIE,OAAA;IAAA4C,QAAA,gBACI5C,OAAA,CAACH,cAAc;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBhD,OAAA;MAAA4C,QAAA,EAAIzC,IAAI,CAAC+B,MAAM,GAAG,CAAC,IAAI/B,IAAI,CAACG,cAAc,CAAC,CAACD;IAAE;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDhD,OAAA;MAAA4C,QAAA,EAAK1B,SAAS,CAACqC;IAAS;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9BhD,OAAA;MAAQwD,OAAO,EAAEP,iBAAkB;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxDhD,OAAA;MAAA4C,QAAA,EACKpC,IAAI,CAACiD,GAAG,CAAC,CAACC,IAAI,EAAEtB,KAAK,kBAClBpC,OAAA;QAAA4C,QAAA,GAAoBc,IAAI,CAACC,UAAU,EAAC,KAAG,EAACD,IAAI,CAACE,WAAW,EAAC,GAAC;MAAA,GAAjDxB,KAAK,CAAC/B,EAAE;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC9C,EAAA,CArGID,KAAK;EAAA,QAEQL,SAAS;AAAA;AAAAiE,EAAA,GAFtB5D,KAAK;AAwGX,eAAeA,KAAK;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}